{"version":3,"sources":["assets\\scripts\\player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","canvas","type","Node","jumpAudio","AudioClip","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","jumpActon","node","runAction","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","start","update","dt","Math","abs","x","onDestroy","off"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        jumpHeight: 0,\r\n        jumpDuration: 0,\r\n        maxMoveSpeed: 0,\r\n        accel: 0,\r\n        \r\n        canvas: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n\r\n\r\n\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    setJumpAction: function() {\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n\r\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n\r\n        //repeat\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\r\n        \r\n    },\r\n\r\n    playJumpSound: function () {\r\n        // play music\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n\r\n    onKeyDown (event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break;\r\n        }\r\n\r\n\r\n    },\r\n\r\n    onKeyUp (event) {\r\n        // unset a flag when key released\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break;\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad:  function() {   \r\n        // initialize jump action\r\n        this.jumpActon = this.setJumpAction();\r\n        this.node.runAction(this.jumpActon);  \r\n\r\n        // accelerate switch\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n\r\n        // horizontal direction\r\n        this.xSpeed = 0;\r\n\r\n        //initialize keyboard listerner\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);   \r\n        \r\n      },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update: function (dt) {\r\n        // update the speed through accelerate direction\r\n        if(this.accLeft){\r\n            this.xSpeed -= this.accel * dt;\r\n        }else if(this.accRight){\r\n            this.xSpeed += this.accel*dt;\r\n        }\r\n\r\n        // limit the player speed no more than max\r\n        if(Math.abs(this.xSpeed) > this.maxMoveSpeed){\r\n            this.xSpeed = this.xSpeed*this.maxMoveSpeed/Math.abs(this.xSpeed);\r\n        }\r\n\r\n        this.node.x += this.xSpeed*dt;\r\n\r\n        // Bounce off the wall\r\n        if(this.node.x >= this.canvas.x || this.node.x <= -this.canvas.x){\r\n            this.xSpeed = -this.xSpeed\r\n        }\r\n\r\n    },\r\n\r\n    onDestroy () {\r\n        // cancel keyboard listerner\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n\r\n        \r\n});\r\n"]}