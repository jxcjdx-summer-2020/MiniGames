{"version":3,"sources":["assets\\Script\\counter.js"],"names":["countText","cc","Class","Component","properties","Label","onLoad","$base","set","count","string","countNumber","num","symbol","label","Number","error","console","log"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAG,IAAhB;AACAC,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRJ,IAAAA,SAAS,EAAEC,EAAE,CAACI;AADN,GAHP;AAOL;AAEAC,EAAAA,MATK,oBASK;AACNC,IAAAA,KAAK,CAACC,GAAN,CAAU,OAAV,EAAmB,KAAKC,KAAxB;AACAT,IAAAA,SAAS,GAAG,KAAKA,SAAjB;AACAA,IAAAA,SAAS,CAACU,MAAV,GAAmBH,KAAK,CAACI,WAAzB;AACH,GAbI;AAeLF,EAAAA,KAfK,iBAeCG,GAfD,EAeqB;AAAA,QAAfC,MAAe,uEAAN,IAAM;;AACtB,QAAI;AACA,UAAIC,KAAK,GAAGd,SAAZ;AACA,UAAIW,WAAW,GAAGI,MAAM,CAACD,KAAK,CAACJ,MAAP,CAAxB;AACAG,MAAAA,MAAM,KAAK,IAAX,GACGF,WAAW,GAAE,CAAEI,MAAM,CAACH,GAAD,CADxB,GAEED,WAAW,IAAII,MAAM,CAACH,GAAD,CAFvB;AAGAL,MAAAA,KAAK,CAACI,WAAN,IAAqBA,WAArB;AACAG,MAAAA,KAAK,CAACJ,MAAN,GAAeH,KAAK,CAACI,WAArB;AACH,KARD,CAQE,OAAOK,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GA3BI,CA6BL;AACA;AAEA;AAEA;;AAlCK,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nlet countText = null\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        countText: cc.Label\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        $base.set('count', this.count)\r\n        countText = this.countText\r\n        countText.string = $base.countNumber\r\n    },\r\n\r\n    count(num, symbol = '++') {\r\n        try {\r\n            let label = countText;\r\n            let countNumber = Number(label.string);\r\n            symbol === '++'\r\n            ?  countNumber =+ Number(num)\r\n            : countNumber -= Number(num)\r\n            $base.countNumber += countNumber\r\n            label.string = $base.countNumber; \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // start () {\r\n    // },\r\n\r\n    // update (dt) {\r\n\r\n    // },\r\n});\r\n"]}