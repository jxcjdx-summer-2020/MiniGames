{"version":3,"sources":["assets/Script/a.js","assets/Script/bullet.js","assets/Script/enemyplane.js","assets/Script/game.js","assets/Script/plane.js","assets/Script/start.js","assets/migration/use_reversed_rotateBy.js"],"names":["module","exports","enemypos","b","require","cc","Class","extends","Component","properties","bulletMoveSpeed","onLoad","log","this","node","parent","getChildByName","getPlayerDistance","bullet","dist","sub","position","mag","onPicked","destroy","game","spawnNewEnemy","gainScore","start","update","dt","p","getPosition","y","a","pickRadius","myplane","default","type","Node","enemyplanePrefab","Prefab","bulletPrefab","scoreDisplay","Label","schedule","spawnNewBullet","bind","score","newenemy","instantiate","addChild","setPosition","getNewEnemyPosition","getComponent","randX","Math","random","randY","v2","newbullet","getNewBulletPosition","pos","x","gameOver","string","director","loadScene","maxMoveSpeed","accel","onKeyDown","event","keyCode","macro","KEY","accLeft","d","accRight","w","accUp","s","accDown","onKeyUp","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","toGame","toStart","RotateBy","_reverse"],"mappings":"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","sourcesContent":["module.exports = {\r\n    enemypos:null,\r\n} ","// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar b = require(\"a\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        bulletMoveSpeed:0\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n   \r\n\r\n     onLoad () {\r\n        cc.log(this.node.parent.getChildByName(\"enemyplane\"))\r\n     },\r\n\r\n     getPlayerDistance(bullet){\r\n       cc.log(\"a.enemypos\"+b.enemypos);\r\n       var dist = b.enemypos.sub(bullet.position).mag();\r\n       cc.log(\"bulletpos\"+bullet.position)\r\n       cc.log(\"dist\"+dist);\r\n       return dist;\r\n\r\n   },\r\n\r\n   onPicked: function(bullet) {\r\n       // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n       \r\n       bullet.parent.getChildByName(\"enemyplane\").destroy();\r\n       this.game.spawnNewEnemy();\r\n         // 调用 Game 脚本的得分方法\r\n        this.game.gainScore();\r\n       cc.log(\"enemyplane, destroy\")\r\n       bullet.destroy();  \r\n       \r\n   },\r\n\r\n    \r\n\r\n   \r\n\r\n    start () {\r\n\r\n    },\r\n\r\n     update (dt) {\r\n         var p=this.node.getPosition();\r\n         \r\n         this.node.y+=this.bulletMoveSpeed*dt\r\n\r\n         if(p.y>640){\r\n             this.node.destroy()\r\n         }\r\n\r\n      // 每帧判断和主角之间的距离是否小于收集距离\r\n      if (this.getPlayerDistance(this.node)<80) {\r\n         \r\n\r\n        cc.log(\"已经触碰敌机\")\r\n        // 调用收集行为\r\n        this.onPicked(this.node);\r\n        \r\n    }\r\n      \r\n\r\n     },\r\n\r\n});\r\n","// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar a = require(\"a\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        pickRadius: 0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n     onLoad () {\r\n         \r\n         cc.log(\"enemypos = \"+a.enemypos);\r\n         a.enemypos= this.node.getPosition();\r\n         cc.log(\"enemypos = \"+a.enemypos);\r\n\r\n    },\r\n     \r\n\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n     update (dt) {\r\n         \r\n        a.enemypos= this.node.getPosition();\r\n        var p=this.node.getPosition();\r\n         \r\n        this.node.y-=100*dt\r\n\r\n        if(p.y>640){\r\n            this.node.destroy()\r\n        }\r\n\r\n     },\r\n});\r\n","// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nvar b = require(\"a\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        myplane: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        // 这个属性引用了敌机预制资源\r\n        enemyplanePrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        bulletPrefab:{\r\n            default:null,\r\n            type:cc.Prefab\r\n        },\r\n\r\n         // score label 的引用\r\n         scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        }\r\n\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n     onLoad () {\r\n         // 生成一个新的星星\r\n        this.spawnNewEnemy();\r\n        this.schedule(this.spawnNewBullet.bind(this),0.3);\r\n        this.score = 0;\r\n       \r\n \r\n     },\r\n\r\n     spawnNewEnemy: function() {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newenemy = cc.instantiate(this.enemyplanePrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newenemy);\r\n        // 为星星设置一个随机位置\r\n        newenemy.setPosition(this.getNewEnemyPosition());\r\n    \r\n        newenemy.getComponent('enemyplane').game = this;\r\n  \r\n    },\r\n\r\n    getNewEnemyPosition: function () {\r\n        var randX = (Math.random() - 0.5) * 2 * 420;\r\n\r\n        var randY =   Math.random(0.5,1) * 500;\r\n      \r\n        return cc.v2(randX, randY);\r\n    },\r\n\r\n    spawnNewBullet: function() {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newbullet = cc.instantiate(this.bulletPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newbullet);\r\n        newbullet.setPosition(this.getNewBulletPosition());\r\n        newbullet.getComponent('bullet').game = this;\r\n \r\n\r\n    },\r\n\r\n    getNewBulletPosition: function () {\r\n        var pos = this.myplane.getPosition();\r\n        var x=pos.x;\r\n        var y=pos.y+55;\r\n        return cc.v2(x,y)\r\n    \r\n    },\r\n\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n     update (dt) {\r\n         if(b.enemypos.sub(this.myplane.position).mag()<80){\r\n             this.gameOver()\r\n         }\r\n\r\n     },\r\n     gainScore: function () {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score;\r\n    },\r\n    gameOver: function () {\r\n        cc.director.loadScene('end');\r\n    }\r\n});\r\n","// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onKeyDown (event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break;\r\n            case cc.macro.KEY.w:\r\n                this.accUp = true;\r\n                break;\r\n            case cc.macro.KEY.s:\r\n                this.accDown = true;\r\n                break;\r\n        }\r\n    },\r\n\r\n    onKeyUp (event) {\r\n        // unset a flag when key released\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break;\r\n            case cc.macro.KEY.w:\r\n                    this.accUp = false;\r\n                    break;\r\n            case cc.macro.KEY.s:\r\n                this.accDown = false;\r\n                break;\r\n        }\r\n    },\r\n\r\n     onLoad () {\r\n         // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n\r\n        // 初始化键盘输入监听\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n     },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n     update (dt) {\r\n          // 根据当前加速度方向每帧更新速度\r\n          if (this.accLeft) {\r\n            if(this.node.x>-420){\r\n            // 根据当前速度更新主角的位置\r\n        this.node.x -= 400 * dt;\r\n    }else{\r\n        this.node.x-=0;\r\n    }\r\n\r\n        } else if (this.accRight) {\r\n            if(this.node.x<420){\r\n            // 根据当前速度更新主角的位置\r\n        this.node.x += 400 * dt;\r\n            }else{\r\n                this.node.x+=0;\r\n            }\r\n        }else if(this.accUp){\r\n            if(this.node.y<250){\r\n          \r\n            this.node.y+=300*dt;\r\n            }else{\r\n                this.node.y+=0;\r\n            }\r\n        }else if(this.accDown){\r\n            if(this.node.y>-250){\r\n            this.node.y-=200*dt}\r\n            else{\r\n                this.node.y-=0;\r\n            }\r\n        }\r\n \r\n\r\n   \r\n     },\r\n});\r\n","// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n\r\n\r\n\r\n    },\r\n\r\n    toGame(){\r\n        cc.director.loadScene('game');\r\n    },\r\n\r\ntoStart(){\r\n\r\n    cc.director.loadScene('start');\r\n\r\n}\r\n\r\n   \r\n\r\n    // update (dt) {},\r\n});\r\n","/*\r\n * This script is automatically generated by Cocos Creator and is only used for projects compatible with v2.1.0/v2.1.1/v2.3.0/v2.3.1/v2.3.2 versions.\r\n * You do not need to manually add this script in any other project.\r\n * If you don't use cc.Action in your project, you can delete this script directly.\r\n * If your project is hosted in VCS such as git, submit this script together.\r\n *\r\n * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0/v2.1.1/v2.3.0/v2.3.1/v2.3.2 版本的工程，\r\n * 你无需在任何其它项目中手动添加此脚本。\r\n * 如果你的项目中没用到 Action，可直接删除该脚本。\r\n * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。\r\n */\r\n\r\ncc.RotateBy._reverse = true;\r\n"],"file":"project.dev.js"}