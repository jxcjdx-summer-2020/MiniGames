{"version":3,"sources":["assets\\script\\app.ts"],"names":[],"mappings":";;;;;;AAAA,MAAM;AACN,IAAY,SAKX;AALD,WAAY,SAAS;IACnB,iDAAQ,CAAA;IACR,mDAAS,CAAA;IACT,iDAAQ,CAAA;IACR,+CAAO,CAAA;AACT,CAAC,EALW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAKpB;AAED;IAYE;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IARD,sBAAkB,eAAQ;aAA1B;YACE,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;YACvD,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IAOD;;;;;MAKE;IACK,yBAAW,GAAlB,UAAmB,IAAY,EAAE,IAAY,EAAE,GAAc;QAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;YAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;SAChD;IACH,CAAC;IAED;;;;OAIG;IACI,0BAAY,GAAnB,UAAoB,IAAY,EAAE,IAAa;QAC7C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED;;;;OAIG;IACI,6BAAe,GAAtB,UAAuB,IAAY;QACjC,4DAA4D;QAC5D,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;YAAE,OAAO,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAClF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;IACrC,CAAC;IACH,UAAC;AAAD,CAlDA,AAkDC,IAAA","file":"","sourceRoot":"/","sourcesContent":["//游戏状态\r\nexport enum GameState {\r\n  gameNone,//初始状态\r\n  gameStart,//游戏开始\r\n  gamePuse,//游戏暂停\r\n  gameEnd,//游戏结束\r\n}\r\n\r\nexport default class App {\r\n\r\n  private static _instance: App;\r\n\r\n  private _nodePools: { [index: string]: cc.NodePool };\r\n  private _nodePfb: { [index: string]: cc.Prefab };\r\n\r\n  public static get Instance(): App {\r\n    if (this._instance == null) this._instance = new App();\r\n    return this._instance;\r\n  }\r\n\r\n  constructor() {\r\n    this._nodePools = {};\r\n    this._nodePfb = {};\r\n  }\r\n\r\n  /**\r\n  * 添加对象池\r\n  * @param    type    `类型`\r\n  * @param    size    `大小`\r\n  * @param    pfb     `预制体`\r\n  */\r\n  public AddTypePool(type: string, size: number, pfb: cc.Prefab) {\r\n    this._nodePools[type] = new cc.NodePool();\r\n    this._nodePfb[type] = pfb;\r\n    for (let ii = 0; ii < size; ++ii) {\r\n      this._nodePools[type].put(cc.instantiate(pfb));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添加对象到池\r\n   * @param    type    `类型`\r\n   * @param    node     `cc.node`\r\n   */\r\n  public PutNode2Pool(type: string, node: cc.Node) {\r\n    this._nodePools[type].put(node);\r\n  }\r\n\r\n  /**\r\n   * 从对象池生成对象\r\n   * @param    type    `类型`\r\n   * return   cc.Node\r\n   */\r\n  public GetNodeFromPool(type: string): cc.Node {\r\n    // cc.log(type, \":pool size=\", this._nodePools[type].size())\r\n    if (this._nodePools[type].size() <= 0) return cc.instantiate(this._nodePfb[type]);\r\n    return this._nodePools[type].get();\r\n  }\r\n}\r\n"]}