{"version":3,"sources":["assets\\Script\\prop.js"],"names":["cc","Class","Component","properties","number","tooltip","ySpeed","type","countText","Label","onLoad","manager","director","getCollisionManager","enabled","setName","text","label","string","fire","x","parent","find","action","moveTo","height","node","finished","callFunc","$base","objectPool","recyclePool","name","myAction","sequence","show","runAction","onCollisionEnter","other","self","console","log","stopAllActions"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACTC,IAAAA,MAAM,EAAE;AACL,iBAAS,CADJ;AAELC,MAAAA,OAAO,EAAE;AAFJ,KADC;AAKTC,IAAAA,MAAM,EAAE;AACJ,iBAAS,CADL;AAEJD,MAAAA,OAAO,EAAE;AAFL,KALC;AASTE,IAAAA,IAAI,EAAE;AACF,iBAAS,CADP;AAEFF,MAAAA,OAAO,EAAE;AAFP,KATG;AAaTG,IAAAA,SAAS,EAAER,EAAE,CAACS;AAbL,GAHP;AAmBL;AAEAC,EAAAA,MArBK,oBAqBK;AACN,QAAIC,OAAO,GAAGX,EAAE,CAACY,QAAH,CAAYC,mBAAZ,EAAd;AACAF,IAAAA,OAAO,CAACG,OAAR,GAAkB,IAAlB;AACH,GAxBI;AA0BLC,EAAAA,OA1BK,mBA0BGC,IA1BH,EA0BS;AACV,QAAIC,KAAK,GAAG,KAAKT,SAAjB;AACAS,IAAAA,KAAK,CAACC,MAAN,GAAeF,IAAf;AACH,GA7BI;AA+BLG,EAAAA,IA/BK,gBA+BAC,CA/BA,EA+BG;AACJ,QAAMC,MAAM,GAAGrB,EAAE,CAACsB,IAAH,CAAQ,mBAAR,CAAf;AACA,QAAIC,MAAM,GAAGvB,EAAE,CAACwB,MAAH,CAAU,KAAKlB,MAAf,EAAuBc,CAAvB,EAA0B,EAAGC,MAAM,CAACI,MAAP,GAAc,CAAf,GAAqB,KAAKC,IAAL,CAAUD,MAAV,GAAmB,GAA1C,CAA1B,CAAb;AACA,QAAIE,QAAQ,GAAG3B,EAAE,CAAC4B,QAAH,CAAY,YAAY;AACnCC,MAAAA,KAAK,CAACC,UAAN,CAAiBC,WAAjB,CAA6B;AACzBL,QAAAA,IAAI,EAAE,KAAKA,IADc;AAEzBM,QAAAA,IAAI,EAAE,KAAKN,IAAL,CAAUM;AAFS,OAA7B;AAIH,KALc,EAKZ,IALY,CAAf;AAMA,QAAIC,QAAQ,GAAGjC,EAAE,CAACkC,QAAH,CAAYlC,EAAE,CAACmC,IAAH,EAAZ,EAAsBZ,MAAtB,EAA8BI,QAA9B,CAAf;AACA,SAAKD,IAAL,CAAUU,SAAV,CAAoBH,QAApB;AACH,GA1CI;AA4CLI,EAAAA,gBAAgB,EAAE,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACZ,IAAlB,EAAwBa,IAAxB;AACA,SAAKb,IAAL,CAAUgB,cAAV;AACAb,IAAAA,KAAK,CAACC,UAAN,CAAiBC,WAAjB,CAA6B;AACzBL,MAAAA,IAAI,EAAE,KAAKA,IADc;AAEzBM,MAAAA,IAAI,EAAE,KAAKN,IAAL,CAAUM;AAFS,KAA7B;AAIH,GAnDI,CAoDL;;AApDK,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n// 创建道具包\r\n// 道具包属性\r\n// 1. 道具数量，决定主角可以使用多少次道具\r\n// 2. 道具速度, 决定道具包下降速度\r\n// 3. 道具类型当前只定义两种类型道具 类型1为子弹类型道具可以控制当前使用的是什么子弹 类型2为子弹发射方式类型道具可以控制子弹发射类型\r\n// 4. 道具资源\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n       number: {\r\n          default: 1,\r\n          tooltip: '道具数量，决定主角可以使用多少次道具'\r\n       },\r\n       ySpeed: {\r\n           default: 1,\r\n           tooltip: '道具速度, 决定道具包下降速度' \r\n       },\r\n       type: {\r\n           default: 1,\r\n           tooltip: '道具类型'\r\n       },\r\n       countText: cc.Label\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        var manager = cc.director.getCollisionManager();\r\n        manager.enabled = true\r\n    },\r\n    \r\n    setName(text) {\r\n        var label = this.countText;\r\n        label.string = text;\r\n    },\r\n\r\n    fire(x) { \r\n        const parent = cc.find('Canvas/background')\r\n        var action = cc.moveTo(this.ySpeed, x, -((parent.height/2) + (this.node.height * 0.5)) );\r\n        var finished = cc.callFunc(function () {\r\n            $base.objectPool.recyclePool({\r\n                node: this.node,\r\n                name: this.node.name\r\n            })\r\n        }, this);\r\n        var myAction = cc.sequence(cc.show(),action, finished);\r\n        this.node.runAction(myAction);\r\n    },\r\n\r\n    onCollisionEnter: function (other, self) {\r\n        console.log(other.node, self);\r\n        this.node.stopAllActions()\r\n        $base.objectPool.recyclePool({\r\n            node: this.node,\r\n            name: this.node.name\r\n        })\r\n    }\r\n    // update (dt) {},\r\n});\r\n"]}