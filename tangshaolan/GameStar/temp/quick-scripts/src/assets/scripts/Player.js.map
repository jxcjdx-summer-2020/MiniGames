{"version":3,"sources":["assets\\scripts\\Player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","MoveSpeed","jumpAudio","type","AudioClip","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","d","onKeyUp","onLoad","jumpAction","node","runAction","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","start","update","dt","x"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,  \r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        MoveSpeed: 0,\r\n        // 跳跃音效资源\r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n    },\r\n    setJumpAction: function () {\r\n       // 跳跃上升\r\n       var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n       // 下落\r\n       var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n       // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\r\n       var callback = cc.callFunc(this.playJumpSound, this);\r\n       // 不断重复，而且每次完成落地动作后调用回调来播放声音\r\n       return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n    onKeyDown (event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.MoveSpeed = -300;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.MoveSpeed = 300;\r\n                break;\r\n        }\r\n    },\r\n    onKeyUp (event) {\r\n        // unset a flag when key released\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.MoveSpeed = 0;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.MoveSpeed = 0;\r\n                break;\r\n        }\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n        // 初始化键盘输入监听\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);   \r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n    //update 在场景加载后就会每帧调用一次，我们一般把需要经常计算或及时更新的逻辑内容放在这里。\r\n    update: function (dt) { \r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.MoveSpeed * dt;\r\n    },\r\n});\r\n"]}