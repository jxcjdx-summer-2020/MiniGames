{"version":3,"sources":["assets\\scripts\\Game.js"],"names":["cc","Class","Component","properties","starPrefab","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","score","displayName","tooltip","scoreDisplay","Label","scoreAudio","AudioClip","onLoad","groundY","y","height","console","log","timer","starDuration","spawnNewStar","newStar","instantiate","node","addChild","Math","random","setPosition","getNewStarPosition","getComponent","game","randX","randY","jumpHeight","maxX","width","v2","start","update","dt","a","gameOver","gainScore","string","audioEngine","playEffect","stopAllActions","director","loadScene"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 这个属性引用了星星预制资源\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n         // 星星产生后消失时间的随机范围\r\n         maxStarDuration: 0,\r\n         minStarDuration: 0,\r\n         // 地面节点，用于确定星星生成的高度\r\n         ground: {\r\n             default: null,\r\n             type: cc.Node\r\n         },\r\n         // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n         player: {\r\n             default: null,\r\n             type: cc.Node\r\n         },\r\n         score: {\r\n            default: 0,\r\n            displayName: \"Score (player)\",\r\n            tooltip: \"The score of player\",\r\n        },\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // 得分音效资源\r\n        scoreAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n        console.log(\"groundY = \" + this.groundY);\r\n         // 初始化计时器\r\n         this.timer = 0;\r\n         this.starDuration = 0;\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n        this.score = 0;\r\n    },\r\n    spawnNewStar: function() {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        // 重置计时器，根据消失时间范围随机取一个值\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        newStar.getComponent('Star').game = this;\r\n    },\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n        // 返回星星坐标\r\n        return cc.v2(randX, randY);\r\n    },\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        let a = this.player.getComponent(\"Player\");\r\n        console.log(a);\r\n        // 每帧更新计时器，超过限度还没有生成新的星星\r\n        // // 就会调用游戏失败逻辑\r\n        if (this.timer > this.starDuration) {\r\n             this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score;\r\n         // 播放得分音效\r\n         cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n    gameOver: function () {\r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n        cc.director.loadScene('game');\r\n    }\r\n});\r\n"]}