{"version":3,"sources":["assets\\scripts\\Player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","type","AudioClip","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onLoad","jumpAction","node","runAction","accLeft","accRight","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","event","keyCode","macro","KEY","a","d","update","dt","Math","abs","x","start"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n         // 跳跃音效资源\r\n         jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n    },\r\n    setJumpAction: function () {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        // 不断重复，而且每次完成落地动作后调用回调来播放声音\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\nonLoad: function () {\r\n    // 初始化跳跃动作\r\n    this.jumpAction = this.setJumpAction();\r\n    this.node.runAction(this.jumpAction);\r\n      // 加速度方向开关\r\n      this.accLeft = false;\r\n      this.accRight = false;\r\n      // 主角当前水平方向速度\r\n      this.xSpeed = 0;\r\n\r\n      // 初始化键盘输入监听\r\n      cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n      cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);   \r\n},\r\nonDestroy () {\r\n    // 取消键盘输入监听\r\n    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n},\r\nonKeyDown (event) {\r\n    // set a flag when key pressed\r\n    switch(event.keyCode) {\r\n        case cc.macro.KEY.a:\r\n            this.accLeft = true;\r\n            break;\r\n        case cc.macro.KEY.d:\r\n            this.accRight = true;\r\n            break;\r\n    }\r\n},\r\n\r\nonKeyUp (event) {\r\n    // unset a flag when key released\r\n    switch(event.keyCode) {\r\n        case cc.macro.KEY.a:\r\n            this.accLeft = false;\r\n            break;\r\n        case cc.macro.KEY.d:\r\n            this.accRight = false;\r\n            break;\r\n    }\r\n},\r\nupdate: function (dt) {\r\n    // 根据当前加速度方向每帧更新速度\r\n    if (this.accLeft) {\r\n        this.xSpeed -= this.accel * dt;\r\n    } else if (this.accRight) {\r\n        this.xSpeed += this.accel * dt;\r\n    }\r\n    // 限制主角的速度不能超过最大值\r\n    if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n        // if speed reach limit, use max speed with current direction\r\n        this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n    }\r\n\r\n    // 根据当前速度更新主角的位置\r\n    this.node.x += this.xSpeed * dt;\r\n},\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}