{"version":3,"sources":["assets\\scripts\\star.js"],"names":["cc","Class","Component","properties","pickRadius","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","gainScore","destroy","start","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACR;AACAC,IAAAA,UAAU,EAAE;AAFJ,GAHP;AAQL;AAGA;AAEAC,EAAAA,iBAAiB,EAAE,6BAAY;AAC3B,QAAIC,SAAS,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA,QAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,WAAOJ,IAAP;AACH,GAjBI;AAkBLK,EAAAA,QAAQ,EAAE,oBAAW;AACjB,SAAKR,IAAL,CAAUS,YAAV;AACA,SAAKT,IAAL,CAAUU,SAAV;AACA,SAAKN,IAAL,CAAUO,OAAV;AACH,GAtBI;AAwBLC,EAAAA,KAxBK,mBAwBI,CAER,CA1BI;AA4BLC,EAAAA,MAAM,EAAE,gBAASC,EAAT,EAAa;AACjB,QAAG,KAAKhB,iBAAL,KAA2B,KAAKD,UAAnC,EAA8C;AAC1C,WAAKW,QAAL;AACA;AACH;;AACD,QAAIO,YAAY,GAAG,IAAI,KAAKf,IAAL,CAAUgB,KAAV,GAAgB,KAAKhB,IAAL,CAAUiB,YAAjD;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,SAAKd,IAAL,CAAUe,OAAV,GAAoBD,UAAU,GAAGE,IAAI,CAACC,KAAL,CAAWN,YAAY,IAAI,MAAMG,UAAV,CAAvB,CAAjC;AACH;AApCI,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // When the distance between the star and the protagonist is less than this value, the collection is completed.\r\n        pickRadius: 0\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n  \r\n\r\n    // onLoad () {},\r\n\r\n    getPlayerDistance: function () {\r\n        var playerPos = this.game.player.getPosition();\r\n        var dist = this.node.position.sub(playerPos).mag();\r\n        return dist;\r\n    },\r\n    onPicked: function() {\r\n        this.game.spawnNewStar();      \r\n        this.game.gainScore();\r\n        this.node.destroy();\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update: function(dt) {\r\n        if(this.getPlayerDistance() < this.pickRadius){\r\n            this.onPicked();\r\n            return;\r\n        }\r\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n    },\r\n});\r\n"]}